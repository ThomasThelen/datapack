% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/SystemMetadata.R
\docType{methods}
\name{SystemMetadata}
\alias{SystemMetadata}
\alias{SystemMetadata,ANY-method}
\alias{SystemMetadata,SystemMetadata-method}
\alias{addAccessRule}
\alias{addAccessRule,SystemMetadata,character-method}
\alias{addAccessRule,SystemMetadata,data.frame-method}
\alias{addAccessRule,SystemMetadata-method}
\alias{hasAccessRule}
\alias{hasAccessRule,SystemMetadata,character-method}
\alias{hasAccessRule,SystemMetadata-method}
\title{Create DataONE SystemMetadata object}
\usage{
SystemMetadata(sysmeta, ...)

\S4method{SystemMetadata}{ANY}(sysmeta, ...)

addAccessRule(x, y, ...)

\S4method{addAccessRule}{SystemMetadata,character}(x, y, permission)

\S4method{addAccessRule}{SystemMetadata,data.frame}(x, y)

hasAccessRule(sysmeta, subject, ...)

\S4method{hasAccessRule}{SystemMetadata,character}(sysmeta, subject, permission)
}
\arguments{
\item{sysmeta}{the SystemMetadata instance to which to add the rules}

\item{x}{the object instance to which to add the rules}

\item{y}{the subject of the rule to be added, or a data frame of subject/permission tuples}

\item{permission}{the permission to be applied to subject if x is character (read, write, changePermission)}

\item{subject}{the subject of the rule to be checked}

\item{permission}{the permission to be applied to subject if x is character}
}
\value{
the SystemMetadata object representing an object

boolean TRUE if the access rule exists already, FALSE otherwise
}
\description{
A class representing DataONE SystemMetadata, which is core information about objects stored in a repository
and needed to manage those objects across systems.  SystemMetadata contains basic identification, ownership,
access policy, replication policy, and related metadata.

Add one or more access rules to a SystemMetadata object.

Each SystemMetadata document may contain a set of (subject, permission) tuples
that represent the access rules for its associated object. This method determines
whether a particular access rule already exists within the set.
}
\section{Slots}{

\describe{
\item{\code{serialVersion}}{value of type \code{"numeric"}, the current version of this system metadata; only update the current version}

\item{\code{identifier}}{value of type \code{"character"}, the identifier of the object that this system metadata describes.}

\item{\code{replicationAllowed}}{value of type \code{"logical"}, for replication policy allows replicants.}

\item{\code{numberReplicas}}{value of type \code{"numeric"}, for number of supported replicas.}

\item{\code{preferredNodes}}{value of type \code{"list"}, of prefered member nodes.}

\item{\code{blockedNodes}}{value of type \code{"list"}, of blocked member nodes.}

\item{\code{formatId}}{value of type \code{"character"}, the DataONE object format for the object.}

\item{\code{size}}{value of type \code{"numeric"}, the size of the object in bytes.}

\item{\code{checksum}}{value of type \code{"character"}, the checksum for the object using the designated checksum algorithm.}

\item{\code{checksumAlgorithm}}{value of type \code{"character"}, the name of the hash function used to generate a checksum, from the DataONE controlled list.}

\item{\code{submitter}}{value of type \code{"character"}, the Distinguished Name or identifier of the person submitting the object.}

\item{\code{rightsHolder}}{value of type \code{"character"}, the Distinguished Name or identifier of the person who holds access rights to the object.}

\item{\code{accessPolicy}}{value of type \code{"data.frame"}, a list of access rules as (subject, permission) tuples to be applied to the object.}

\item{\code{obsoletes}}{value of type \code{"character"}, the identifier of an object which this object replaces.}

\item{\code{obsoletedBy}}{value of type \code{"character"}, the identifier of an object that replaces this object.}

\item{\code{archived}}{value of type \code{"logical"}, a boolean flag indicating whether the object has been archived and thus hidden.}

\item{\code{dateUploaded}}{value of type \code{"character"}, the date on which the object was uploaded to a member node.}

\item{\code{dateSysMetadataModified}}{value of type \code{"character"}, the last date on which this system metadata was modified.}

\item{\code{originMemberNode}}{value of type \code{"character"}, the node identifier of the node on which the object was originally registered.}

\item{\code{authoritativeMemberNode}}{value of type \code{"character"}, the node identifier of the node which currently is authoritative for the object.}
}}
\examples{
\dontrun{
sysmeta <- addAccessRule(sysmeta, "uid=smith,ou=Account,dc=example,dc=com", "write")
accessRules <- data.frame(subject=c("uid=smith,ou=Account,dc=example,dc=com", "uid=slaughter,o=unaffiliated,dc=example,dc=org"), permission=c("write", "changePermission"))
sysmeta <- addAccessRule(sysmeta, accessRules)
}
}

