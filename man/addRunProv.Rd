% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataPackage.R
\docType{methods}
\name{addRunProv}
\alias{addRunProv}
\alias{addRunProv,DataPackage-method}
\title{Add provenance relationships to a DataPackage for a script execution.}
\usage{
addRunProv(x, ...)

\S4method{addRunProv}{DataPackage}(x, scriptId, inIds = list(),
  outIds = list(), resolveURI = D1_CN_Resolve_URL)
}
\arguments{
\item{x}{The \code{DataPackage} to add provenance relationships to.}

\item{scriptId}{The \code{id} of the DataObject created for the script.}

\item{inIds}{A list of files that were read by the program}

\item{outIds}{A list of files that were generated by the program during the run}

\item{resolveURI}{The leading portion of a URL that can be used to locate objects referenced in the
provenance relationships. The default is the DataONE production resolve service: \url{https://cn.dataone.org/cn/v2/resolve}. 
Object ids are appended to this URI to obtain the object location URL, e.g. \url{https://cn.dataone.org/cn/v2/resolve/urn:uuid:5b3d97d0-330d-42a4-b93f-86d0f16f9478},
and these complete URLs are used to reference objects in the provenance relationships.}
}
\description{
A DataPackage can store provenance relationships between the DataObjects in the package. These
relationships can be added to a DataPackage manually with the \code{datapack::insertRelationships} method, or 
with methods such as \code{addRunProv}, which will add the provenance relationships that associate a script
with the input files it read and the output files it generated.
}
\details{
This method operates on a DataPackage that has had DataObjects for the script, inputs and outputs
previously added to it. Provenance relationships from the ProvONE data model are added to the package. The
ProvONE data model can be viewed at \url{https://purl.dataone.org/provone-v1-dev}
}
\examples{
dp <- addRunProv(dp, scriptId, inIds, outIds, resolveURI)
library(dataone)
library(datapack)
dp <- new("DataPackage")
inIds <- list()
outIds <- list()
# Add the script to the DataPackage
doProg <- new("DataObject", format="text/plain", 
              filename=system.file("./extdata/pkg-example/logit-regression-example.R", package="datapack"), 
              suggestedFilename="logit regression example R script")
scriptId <- getIdentifier(doProg)
dp <- addData(dp, doProg)
# Add a script input to the DataPackage
doIn <- new("DataObject", format="text/csv", 
            filename=system.file("./extdata/pkg-example/binary.csv", package="datapack"), 
            suggestedFilename="binary response data")
inIds[[length(inIds)+1]] <- getIdentifier(doIn)
dp <- addData(dp, doIn)
# Add a script output to the DataPackage
doOut <- new("DataObject", format="image/png", 
             filename=system.file("./extdata/pkg-example/gre-predicted.png", package="datapack"), 
             suggestedFilename="plot of gre predicted")
outIds[[length(outIds)+1]] <- getIdentifier(doOut)
dp <- addData(dp, doOut)
# Add the provenenace relationshps, linking the input and output to the script execution
dp <- addRunProv(dp, scriptId, inIds, outIds) 
# View the results
head(getRelationships(dp))
}

